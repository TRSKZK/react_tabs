{"version":3,"sources":["components/Tabs.tsx/index.ts","components/Tabs.tsx/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","type","onClick","title","content","App","state","element","setState","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yOAEeA,ECOsB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACrDC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,gCACE,oBAAIM,UAAU,YAAd,SACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAU,kBAFZ,SAIE,wBACEA,UAAWN,IAAkBI,EAAIC,GAC7B,uCACA,gCACJG,KAAK,SACLC,QAAS,kBAAMR,EAAcG,IAL/B,SAOGA,EAAIM,SAVFN,EAAIC,SAef,qBAAKC,UAAU,UAAf,SACGJ,EAAcA,EAAYS,QAAU,WC5BvCZ,G,MAAc,CAClB,CAAEM,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,iBAOpCC,E,4MACJC,MAAQ,CACNX,YAAaH,EAAK,I,EAGpBE,cAAgB,SAACa,GACXA,EAAQT,KAAO,EAAKQ,MAAMX,YAAYG,IACxC,EAAKU,SAAS,CACZb,YAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOS,EAAQT,S,4CAKvD,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qDAEGU,KAAKH,MAAMX,YAAYQ,SAE1B,8BAAMX,EAAKkB,SACX,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAegB,KAAKH,MAAMX,YAAYG,GACtCJ,cAAee,KAAKf,uB,GAxBZiB,IAAMC,WA+BTP,IC3CfQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8444adf3.chunk.js","sourcesContent":["import { Tabs } from './Tabs';\n\nexport default Tabs;\n","import React from 'react';\nimport './Tabs.scss';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n}\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div>\n      <ul className=\"tabs-list\">\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className=\"tabs-list__item\"\n          >\n            <button\n              className={selectedTabId === tab.id\n                ? 'button tabs-list__item-button-active'\n                : 'button tabs-list__item-button'}\n              type=\"button\"\n              onClick={() => onTabSelected(tab)}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"content\">\n        {selectedTab ? selectedTab.content : null}\n      </div>\n    </div>\n  );\n};\n\n//  Line 17:11:  Non-interactive elements should not be assigned mouse or keyboard event listeners\n","import React from 'react';\nimport Tabs from './components/Tabs.tsx';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  selectedTab?: Tab,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (element: Tab) => {\n    if (element.id !== this.state.selectedTab.id) {\n      this.setState({\n        selectedTab: tabs.find(tab => tab.id === element.id),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected tab is&nbsp;\n          {this.state.selectedTab.title}\n        </h1>\n        <div>{tabs.length}</div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={this.state.selectedTab.id}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}